name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
  
    - name: Checkout main
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Extract tag version
      id: versioning
      run: |
        tag=${GITHUB_REF/refs\/tags\//}
        tag=${tag#v}
        echo ::set-output name=tag_version::$tag

    - name: Extract chart version
      id: chart_version
      run: |
        CHART_VERSION=$(cat charts/onechart/Chart.yaml | grep ^version:)
        CHART_VERSION=${CHART_VERSION#version: }
        echo $CHART_VERSION
        echo ::set-output name=chart_version::$CHART_VERSION

        CHART_VERSION=$(cat charts/cron-job/Chart.yaml | grep ^version:)
        CHART_VERSION=${CHART_VERSION#version: }
        echo $CHART_VERSION
        echo ::set-output name=cron_job_chart_version::$CHART_VERSION

    - name: Ensure tag and chart version matches
      run: |
        echo "$TAG_VERSION"
        echo "$CHART_VERSION"
        echo "$CRON_JOB_CHART_VERSION"
        if [ "$TAG_VERSION" != "$CHART_VERSION" ]
        then
            echo "Tag version does not match chart version"
            exit 1
        fi
        if [ "$TAG_VERSION" != "$CRON_JOB_CHART_VERSION" ]
                then
                    echo "Tag version does not match cron-job chart version"
                    exit 1
                fi
      env:
        TAG_VERSION: ${{ steps.versioning.outputs.tag_version }}
        CHART_VERSION: ${{ steps.chart_version.outputs.chart_version }}
        CRON_JOB_CHART_VERSION: ${{ steps.chart_version.outputs.cron_job_chart_version }}

    - name: Create a Release
      uses: elgohr/Github-Release-Action@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        title: Release ${{ github.ref }}
    
    - name: Create and push chart to GHCR
      uses: appany/helm-oci-chart-releaser@v0.4.1
      with:
        name: onechart
        repository: ${{ github.actor }}/helm
        tag: ${{ steps.versioning.outputs.tag_version }}
        registry: ghcr.io
        registry_username: ${{ github.actor }}
        registry_password: ${{ secrets.GITHUB_TOKEN }}
